@using Core.Concretes.Entities
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager
@{
    var profile = await userManager.GetUserAsync(User);
}
<div class="dropdown">
    <i class="fa-solid fa-bell fa-2x dropdown-toggle" data-bs-toggle="dropdown"></i>
    <ul class="dropdown-menu dropdown-menu-dark dropdown-menu-end">
        @if (profile?.Notifications != null && profile.Notifications.Any())
        {
            foreach (var notification in profile.Notifications)
            {
                <li>
                    <div class="d-flex align-items-center">
                        <strong>@notification.Type</strong>
                        <span>@notification.Message</span>
                    </div>
                </li>
            }
        }
        else
        {
            <li>
                <a class="dropdown-item" href="#">No new notifications</a>
            </li>
        }
        <li>
            <hr class="dropdown-divider">
        </li>
        <li>
            <a class="dropdown-item" href="#">View all notifications</a>
        </li>
    </ul>
</div>
<div class="dropdown">
    <img src="@(profile?.ProfilePictureUrl??"/img/avocado.png")"
         class="rounded-circle dropdown-toggle shadow-sm border"
         width="64"
         height="64"
         data-bs-toggle="dropdown" />
    <ul class="dropdown-menu dropdown-menu-dark dropdown-menu-end">
        <li><a class="dropdown-item" asp-controller="account" asp-action="index">My Profile</a></li>
        <li><a class="dropdown-item" asp-controller="account" asp-action="resetpassword">Reset Password</a></li>
        <li><hr class="dropdown-divider"></li>
        <li>
            <button class="dropdown-item btn" data-bs-toggle="modal" data-bs-target="#logoutModal" type="button">Logout</button>
        </li>
    </ul>
</div>