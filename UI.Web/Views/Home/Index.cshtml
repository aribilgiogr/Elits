@using Core.Abstracts.IServices
@using Core.Concretes.Entities
@using Microsoft.AspNetCore.Identity
@using UI.Web.Models.Home
@inject IPostLikeService likeService
@inject SignInManager<ApplicationUser> signInManager
@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
    var userId = Guid.Parse(signInManager.UserManager.GetUserId(User)!);
}

<div class="row">
    <div class="col-md-6 mx-auto">
        <partial name="_NewPostFormPartial" model="new NewPostViewModel()" />
    </div>
</div>
<div class="row">
    <div class="col-md-6 mx-auto">
        @foreach (var item in Model.Posts.OrderByDescending(x => x.CreatedAt))
        {
            <div class="card border-0 border-bottom mb-3">
                <div class="card-body">
                    <h5>
                        <img src="@(item.MemberProfilePictureUrl??"/img/avocado.png")" class="rounded-circle" style="width: 32px; height: 32px;" alt="@item.MemberUserName" />
                        @@@item.MemberUserName
                    </h5>
                    <p>@item.Content</p>
                    @if (item.AttachedImageUrl != null)
                    {
                        <img src="@item.AttachedImageUrl" class="img-fluid" alt="@item.Content" />
                    }
                    <div class="d-flex justify-content-between">
                        <small class="text-muted">
                            <i class="fa-regular fa-clock"></i>
                            @item.CreatedAt.ToLongDateString()
                            @item.CreatedAt.ToLongTimeString()
                        </small>
                        <small class="text-muted">
                            @if (!item.MemberId.Equals(userId))
                            {
                                if (await likeService.IsLikedByUserAsync(item.Id, userId))
                                {
                                    <i class="fa-solid fa-heart text-danger"></i>
                                }
                                else
                                {
                                    <a class="fa-regular fa-heart text-decoration-none text-danger" asp-action="like" asp-route-postId="@item.Id"></a>
                                }
                            }
                            else
                            {
                                <i class="fa-regular fa-heart text-danger"></i>
                            }
                            @item.LikeCount
                            |
                            <button class="btn" data-bs-toggle="collapse" data-bs-target="#commentCollapse">
                                <i class="fa-solid fa-comment text-success"></i> @item.CommentCount
                            </button>
                        </small>
                    </div>
                    <div class="collapse" id="commentCollapse">
                        @foreach (var comment in item.Comments)
                        {
                            <div class="card card-body border-0 border-bottom mb-3">
                                <h6>
                                    <img src="@(comment.MemberProfilePictureUrl??"/img/avocado.png")" class="rounded-circle" style="width: 24px; height: 24px;" alt="@comment.MemberUserName" />
                                    @@@comment.MemberUserName
                                </h6>
                                <small>@comment.Content</small>
                                <small class="text-muted">@comment.CreatedAt.ToLongDateString() @comment.CreatedAt.ToLongTimeString()</small>
                            </div>
                        }
                        <button class="btn btn-outline-dark w-100" data-bs-toggle="modal" data-bs-target="#commentModal" data-post-id="@item.Id">Submit New Comment</button>
                    </div>
                </div>

            </div>
        }
    </div>
</div>
